job:
  tags:
    - shell
    - nvidia-docker
    - skynet

before_script:
  - nvidia-smi

variables:
  GIT_STRATEGY: clone

stages:
  - build
  - production
  - log
  - scan

hakka_service_image:
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t $CI_REGISTRY/hakka-405/docker-gpu-hakka-speech-command-api-service/hakka-service .
    - docker push $CI_REGISTRY/hakka-405/docker-gpu-hakka-speech-command-api-service/hakka-service

deploy_service:
  stage: production
  needs: ["hakka_service_image"]
  script:
    - ls 
    - docker-compose up -d --build
    #- docker run my-docker-image /script/to/run/tests

service_log:
  stage: log
  needs: ["deploy_service"]
  script:
    - docker-compose ps 
    - docker-compose logs

sonarqube_scan_project:
  stage: scan
  # 允許在資安掃描時失敗
  allow_failure: true
  script:
    - echo "Prepare Sonarqube Scan - Server ${SONAR_HOST_URL}" 
    - docker run --rm -e SONAR_HOST_URL=${SONAR_HOST_URL} 
      -v "${PWD}:/usr/src" --user="$(id -u):$(id -g)" 
      sonarsource/sonar-scanner-cli -Dsonar.qualitygate.wait=true -Dsonar.projectKey=${CI_PROJECT_NAME}-${CI_PROJECT_ID} -Dsonar.projectName=${CI_PROJECT_PATH_SLUG} -Dsonar.projectVersion=${CI_COMMIT_SHORT_SHA}
